{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/glslang.ts","webpack:///./src/examples/helloTriangleMSAA.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","glslang","undefined","glslangModule","import","default","title","description","init","canvas","useWGSL","adapter","navigator","gpu","requestAdapter","device","requestDevice","swapChain","getContext","configureSwapChain","format","pipeline","createRenderPipeline","vertexStage","createShaderModule","code","wgslShaders","vertex","glslShaders","transform","glsl","compileGLSL","entryPoint","fragmentStage","fragment","primitiveTopology","colorStates","sampleCount","attachment","createTexture","size","width","height","depth","usage","GPUTextureUsage","OUTPUT_ATTACHMENT","createView","commandEncoder","createCommandEncoder","renderPassDescriptor","colorAttachments","resolveTarget","getCurrentTexture","loadValue","g","b","a","passEncoder","beginRenderPass","setPipeline","draw","endPass","defaultQueue","submit","finish"],"mappings":"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","file":"helloTriangleMSAA-549343.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","let glslang = undefined;\nexport default async function() {\n  if (glslang !== undefined) return glslang;\n  // @ts-ignore\n  const glslangModule = await import(/* webpackIgnore: true */ 'https://unpkg.com/@webgpu/glslang@0.0.15/dist/web-devel/glslang.js');\n  glslang = await glslangModule.default();\n  return glslang;\n}\n","import glslangModule from '../glslang';\n\nexport const title = 'Hello Triangle MSAA';\nexport const description = 'Shows rendering a basic triangle with multisampling.';\n\nexport async function init(canvas: HTMLCanvasElement, useWGSL: boolean) {\n  const adapter = await navigator.gpu.requestAdapter();\n  const device = await adapter.requestDevice();\n  const glslang = await glslangModule();\n\n  const context = canvas.getContext(\"gpupresent\");\n\n  const swapChainFormat = \"bgra8unorm\";\n\n  const swapChain: GPUSwapChain = context.configureSwapChain({\n    device,\n    format: swapChainFormat,\n  });\n\n  const sampleCount = 4;\n\n  const pipeline = device.createRenderPipeline({\n    vertexStage: {\n      module: useWGSL\n        ? device.createShaderModule({\n            code: wgslShaders.vertex,\n          })\n        : device.createShaderModule({\n            code: glslShaders.vertex,\n            transform: (glsl) => glslang.compileGLSL(glsl, \"vertex\"),\n          }),\n      entryPoint: \"main\",\n    },\n    fragmentStage: {\n      module: useWGSL\n        ? device.createShaderModule({\n            code: wgslShaders.fragment,\n          })\n        : device.createShaderModule({\n            code: glslShaders.fragment,\n            transform: (glsl) => glslang.compileGLSL(glsl, \"fragment\"),\n          }),\n      entryPoint: \"main\",\n    },\n\n    primitiveTopology: \"triangle-list\",\n\n    colorStates: [\n      {\n        format: swapChainFormat,\n      },\n    ],\n\n    sampleCount,\n  });\n\n  const texture = device.createTexture({\n    size: {\n      width: canvas.width,\n      height: canvas.height,\n      depth: 1,\n    },\n    sampleCount,\n    format: swapChainFormat,\n    usage: GPUTextureUsage.OUTPUT_ATTACHMENT,\n  });\n  const attachment = texture.createView();\n\n  function frame() {\n    const commandEncoder = device.createCommandEncoder();\n\n    const renderPassDescriptor: GPURenderPassDescriptor = {\n      colorAttachments: [\n        {\n          attachment: attachment,\n          resolveTarget: swapChain.getCurrentTexture().createView(),\n          loadValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n        },\n      ],\n    };\n\n    const passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n    passEncoder.setPipeline(pipeline);\n    passEncoder.draw(3, 1, 0, 0);\n    passEncoder.endPass();\n\n    device.defaultQueue.submit([commandEncoder.finish()]);\n  }\n\n  return frame;\n}\n\nexport const glslShaders = {\n  vertex: `#version 450\nconst vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\n\nvoid main() {\n    gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\n}\n`,\n\n  fragment: `#version 450\n  layout(location = 0) out vec4 outColor;\n\n  void main() {\n      outColor = vec4(1.0, 0.0, 0.0, 1.0);\n  }\n`,\n};\n\nexport const wgslShaders = {\n  vertex: `\nconst pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n    vec2<f32>(0.0, 0.5),\n    vec2<f32>(-0.5, -0.5),\n    vec2<f32>(0.5, -0.5));\n\n[[builtin(position)]] var<out> Position : vec4<f32>;\n[[builtin(vertex_idx)]] var<in> VertexIndex : i32;\n\n[[stage(vertex)]]\nfn main() -> void {\n  Position = vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n  return;\n}\n`,\n  fragment: `\n[[location(0)]] var<out> outColor : vec4<f32>;\n\n[[stage(fragment)]]\nfn main() -> void {\n  outColor = vec4<f32>(1.0, 0.0, 0.0, 1.0);\n  return;\n}\n`,\n};\n"],"sourceRoot":""}